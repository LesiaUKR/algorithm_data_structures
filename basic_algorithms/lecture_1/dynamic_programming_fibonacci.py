# динамічне програмування - це метод розв'язання складних задач, розбиваючи їх на простіші підзадачі
# класичним прикладом застосування динамічного програмування є обчислення чисел Фібоначчі
# Числа Фібоначчі — це послідовність чисел, у якій кожне наступне число дорівнює сумі двох попередніх чисел
# декілька перших чисел цієї послідовності: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 і так далі
# Математично послідовність Фібоначчі можна визначити рекурсивно:
# F(0)=0
# F(1)=1
# F(n)=F(n−1)+F(n−2) для n > 1
# Де F(n) — це n-е число Фібоначчі.
# Замість рекурсивного підходу, де деякі обчислення можуть відбуватися кілька разів, 
# ми можемо зберігати раніше обчислені значення для ефективного визначення наступних чисел у послідовності.

def fibonacci(n):
    fib = [0, 1] + [0]*(n-1) # Створюємо список з першими двома числами послідовності Фібоначчі 0 і 1, решта значень заповнюються нулями

    for i in range(2, n+1):
        print("i: ", i)
        fib[i] = fib[i-1] + fib[i-2]
        print("fib[i]: ", fib[i])
        print("fib: ", fib)
    return fib[n]

print(fibonacci(10)) # Output: 55
