# Greedy algorithm  - жадібний алгоритм

# Ось основні три принципи жадібних алгоритмів:
# 1. Локальний оптимум. На кожному кроці алгоритм вибирає найкращий локальний варіант.
# 2. Прогрес. Жадібний алгоритм постійно рухається вперед, роблячи найкращий вибір на кожному кроці.
# 3. Незворотність. Після кожного кроку вибір фіксується і не може бути вже скасований.

# Отже, суть жадібних алгоритмів полягає в тому, що вони на кожному кроці вибирають найкращий локальний варіант,
# сподіваючись, що це приведе до оптимального глобального рішення.

def greedy_coin_change(amount):
    # Список монет, які ми маємо
    coins = [25, 10, 5, 1]
    # Список для збереження номіналів використаних монет для розміну amount
    change = []

    for coin in coins: # Перебираємо всі монети
        while amount >= coin: # Поки можемо використати поточну монету
            amount -= coin # Зменшуємо суму на величину монети
            print("amount:", amount)
            change.append(coin) # Додаємо монету до списку change

    return change

# Приклад використання
amount_to_return = 63  # Наприклад, 63 копійки
change = greedy_coin_change(amount_to_return)
print(change)  # [25, 25, 10, 1, 1, 1]