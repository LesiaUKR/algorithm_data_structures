# Динамічне програмування може бути застосоване у двох формах: зверху-вниз і знизу-вгору.
# 1. Верхній підхід (Top-Down), також відомий як мемоїзація, використовується для рекурсивних алгоритмів.
# Мемоїзація означає зберігання проміжних результатів в словнику, щоб уникнути повторних обчислень.
# 2. Нижній підхід (Bottom-Up), або висхідне динамічне програмування, використовується для ітеративних алгоритмів.
# В цьому підході результати обчислень зберігаються в масиві або списку.


# Верхній підхід (Top-Down) на прикладі чисел Фібоначчі
def fibonacci(n, memo):
   #  перевірка чи число вже є в словнику
    if n in memo:
        return memo[n] # якщо так, то повертаємо його
    if n <= 2: # якщо число менше або дорівнює 2, то повертаємо 1
        return 1
    memo[n] = fibonacci(n - 1, memo) + fibonacci(n - 2, memo) # рекурсивно викликаємо функцію
    return memo[n]

n = 10
memo = {} # словник для зберігання проміжних результатів

fib_number = fibonacci(n, memo)
print(fib_number)  # 55
print("memo", memo) # {3: 2, 4: 3, 5: 5, 6: 8, 7: 13, 8: 21, 9: 34, 10: 55}
