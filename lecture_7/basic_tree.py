# basic tree structure
class Node:
    def __init__(self, key):
        self.left = None
        self.right = None
        self.val = key

# Двійкове (бінарне) дерево — це ієрархічна структура даних, яка складається з вузлів,
# де кожен вузол може мати не більше, ніж два дочірні вузли.
# Двійкове дерево є основою для багатьох інших деревоподібних структур даних, таких як:
# двійкові дерева пошуку (BST), червоно-чорні дерева, AVL-дерева та інші.

# Обхід дерева - це процес відвідування кожного вузла дерева рівно один раз
# Залежно від порядку відвідування вузлів, обхід дерева може бути:

# 1.Прямий (preorder) обхід: Відвідати кореневий вузол - Обійти ліве піддерево - Обійти праве піддерево
#  корисний для клонування дерева або зберігання дерева у файл, який можна потім легко відновити

# 2. Центровий (inorder) обхід: Обійти ліве піддерево - Відвідати кореневий вузол - Обійти праве піддерево
# корисний для отримання вузлів дерева в порядку зростання, наприклад для того ж двійкового дерева пошуку

# 3. Зворотний (postorder) обхід: Обійти ліве піддерево - Обійти праве піддерево - Відвідати кореневий вузол

# Вставка, видалення і пошук даних у загальному дереві дорівнюють О(n)
